/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        lang_switch: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(N1))>, <&kp LA(LS(N2))>, <&kp LA(LEFT_SHIFT)>;
        };

        lt_hp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;

            display-name = "Layer-Tap (hold preferred)";
            label = "Layer-Tap (hold preferred)";
        };

        lt2_space_tog3: lt2_space_tog3 {
            compatible = "zmk,behavior-tap-dance";
            label = "LT 2\space Tog3";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&mo 1>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                         &kp N6           &kp N7     &kp N8     &kp N9    &kp N0    &kp BACKSPACE
&kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                                          &kp Y            &kp U      &kp I      &kp O     &kp P     &kp LEFT_BRACKET
&kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                                          &kp H            &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B           &kp C_MUTE    &rgb_ug RGB_TOG  &kp N            &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT  &kp LCTRL  &lt_hp 1 SPACE  &kp RET       &kp ENTER        &lt2_space_tog3  &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp LC(LG(LEFT_ARROW)) LC(LG(RIGHT_ARROW))>;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&lang_switch  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
&kp GRAVE     &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
&trans        &kp PLUS   &kp UNDER  &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&trans        &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
                         &trans     &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp LC(LG(LEFT_ARROW)) LC(LG(RIGHT_ARROW))>;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&trans  &trans      &trans     &trans       &trans       &trans                      &mt RC(PAUSE_BREAK) PAUSE_BREAK  &trans             &trans    &trans     &kp DELETE  &kp BACKSPACE
&trans  &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                      &kp PG_UP                        &kp HOME           &kp UP    &kp END    &trans      &trans
&trans  &kp LALT    &kp LCTRL  &kp LSHFT    &trans       &kp CLCK                    &kp PG_DN                        &kp LEFT           &kp DOWN  &kp RIGHT  &trans      &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans    &trans    &trans  &trans                           &kp RIGHT_BRACKET  &trans    &trans     &trans      &trans
                    &trans     &trans       &trans       &trans    &trans    &trans  &trans                           &trans             &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp LC(LG(LEFT_ARROW)) LC(LG(RIGHT_ARROW))>;
        };

        adjust_layer {
            display-name = "Adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                     &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                  &none  &none  &none  &none  &none  &none
&out OUT_TOG       &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &rgb_ug RGB_SPD  &rgb_ug RGB_SPI                  &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &none    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none    &none  &none  &none  &none  &none
            >;
        };
    };
};
